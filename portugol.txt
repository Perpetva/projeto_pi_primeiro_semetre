programa {

funcao fazMenu(){
    escreva("Bem vindo ao, FUTQUIZ")
    escreva("Escolha a dificuldade: Facil, Medio ou Dificil")
fim_funcao
}

funcao chamaPergunta(a){
    aleatorio := novo Random()
    sc := novo Scanner()
    
    questoes := a

    selecionados := novo vetor[booleano] com tamanho[tamanho(questoes)]

    indicesSelecionados := novo vetor[inteiro] com tamanho[programa.qtdePerguntas]
    para i de 0 ate programa.qtdePerguntas-1 passo 1 faca
        repita
            indice := aleatorio.nextInt(tamanho(questoes))
        ate que nao selecionados[indice] 

        selecionados[indice] := verdadeiro 
        indicesSelecionados[i] := indice 
    fim_para

    para cada indice em indicesSelecionados faca
        escreva("\nPergunta:")
        se fazPergunta(questoes[indice], sc) entao
            programa.pontuacao := programa.pontuacao + 1
        fim_se
    fim_para
fim_funcao

funcao fazPergunta(pergunta, sc) -> logico
    escreva(pergunta) 

    para i de 2 ate tamanho(pergunta) passo 1 faca
        escreva(pergunta[i])
    fim_para

    escreva("Escolha a opção correta (a, b, c ou d): ")

    resposta := sc.leiaLinha()

    se resposta.equalsIgnoreCase(correta) entao
        escreva("Resposta correta!")
        retorne verdadeiro
    senao
        escreva("Resposta incorreta! A resposta correta é: ", correta)
        retorne falso
    fim_se
fim_funcao
}

algoritmo principal
    qtdePerguntas := 2
    pontuacao := 0

    fazMenu()

    escreva("Escolha a dificuldade: ")
    dificuldade := leiaLinha()

    enquanto (nao (dificuldade.equalsIgnoreCase("facil")) e nao (dificuldade.equalsIgnoreCase("medio")) e nao (dificuldade.equalsIgnoreCase("dificil"))) faca
        escreva("Você digitou algo diferente de Facil, Medio ou Dificil\nTente novamente.\nCaso queira sair do programa digite 'Sair'")
        dificuldade := leiaLinha()
        
        se dificuldade.equalsIgnoreCase("sair") entao
            escreva("Encerrando o programa...")
            aguarde(3000)
            escreva("Programa encerrado.")
            pare
        fim_se
    fim_enquanto

    se dificuldade.equalsIgnoreCase("facil") entao
        chamaPergunta(perguntas_facil.getQuestoes())
    fim_se

    se dificuldade.equalsIgnoreCase("medio") entao
        chamaPergunta(perguntas_medio.getQuestoes())
    fim_se

    se dificuldade.equalsIgnoreCase("dificil") entao
        chamaPergunta(perguntas_dificil.getQuestoes())
    fim_se

    escreva("\nFim do Quiz!")
    escreva("Você acertou ", pontuacao, " de ", qtdePerguntas)
fim_algoritmo

}

